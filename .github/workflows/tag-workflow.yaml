name: Build Linux/Windows

on:
  release:
    types:
      - published
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  windows_linux:
    name: Windows And Linux releases
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Install Linux Build Dependencies
        run: sudo apt-get install --yes gcc libc6-dev libx11-dev xorg-dev libxtst-dev
      - name: Install Windows Build Dependencies
        run: sudo apt-get install --yes gcc-multilib gcc-mingw-w64
      - name: Build Linux
        run: mkdir -p .build && CGO_ENABLED=1 go build -o .build/linux main.go
      - name: Build Windows
        run: mkdir -p .build && CC=x86_64-w64-mingw32-gcc CGO_ENABLED=1 GOOS=windows go build -o .build/windows.exe main.go
      - name: Add Linux Artifact To Release
        run: gh release upload ${{github.event.release.tag_name}} .build/linux --clobber
      - name: Add Windows Artifact To Release
        run: gh release upload ${{github.event.release.tag_name}} .build/windows.exe --clobber
  osx:
    name: OSX Releases
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Build OSX AMD64
        run: mkdir -p .build && CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -o .build/osx-amd main.go
      - name: Build OSX ARM64
        run: mkdir -p .build && CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 go build -o .build/osx-arm main.go
      - name: Add OSX AMD64 Artifact To Release
        run: gh release upload ${{github.event.release.tag_name}} .build/osx-amd --clobber
      - name: Add OSX ARM64 Artifact To Release
        run: gh release upload ${{github.event.release.tag_name}} .build/osx-arm --clobber
